[{"C:\\Users\\om javheri\\Desktop\\Sciqus Pvt Ltd\\frontend\\src\\index.js":"1","C:\\Users\\om javheri\\Desktop\\Sciqus Pvt Ltd\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\om javheri\\Desktop\\Sciqus Pvt Ltd\\frontend\\src\\App.js":"3","C:\\Users\\om javheri\\Desktop\\Sciqus Pvt Ltd\\frontend\\src\\components\\ShowAndBook.js":"4","C:\\Users\\om javheri\\Desktop\\Sciqus Pvt Ltd\\frontend\\src\\components\\Textform.js":"5","C:\\Users\\om javheri\\Desktop\\Sciqus Pvt Ltd\\frontend\\src\\components\\Navbar.js":"6","C:\\Users\\om javheri\\Desktop\\Sciqus Pvt Ltd\\frontend\\src\\components\\Create.js":"7","C:\\Users\\om javheri\\Desktop\\Sciqus Pvt Ltd\\frontend\\src\\components\\Edit2.js":"8","C:\\Users\\om javheri\\Desktop\\Sciqus Pvt Ltd\\frontend\\src\\components\\SignupValidation.js":"9","C:\\Users\\om javheri\\Desktop\\Sciqus Pvt Ltd\\frontend\\src\\components\\LoginValidation.js":"10","C:\\Users\\om javheri\\Desktop\\Sciqus Pvt Ltd\\frontend\\src\\components\\ShowNavbar.js":"11","C:\\Users\\om javheri\\Desktop\\Sciqus Pvt Ltd\\frontend\\src\\components\\NavbarLimit.js":"12","C:\\Users\\om javheri\\Desktop\\Sciqus Pvt Ltd\\frontend\\src\\components\\ShowAndBooks.js":"13","C:\\Users\\om javheri\\Desktop\\Sciqus Pvt Ltd  MongoDB Trial\\frontend\\src\\index.js":"14","C:\\Users\\om javheri\\Desktop\\Sciqus Pvt Ltd  MongoDB Trial\\frontend\\src\\reportWebVitals.js":"15","C:\\Users\\om javheri\\Desktop\\Sciqus Pvt Ltd  MongoDB Trial\\frontend\\src\\App.js":"16","C:\\Users\\om javheri\\Desktop\\Sciqus Pvt Ltd  MongoDB Trial\\frontend\\src\\components\\ShowNavbar.js":"17","C:\\Users\\om javheri\\Desktop\\Sciqus Pvt Ltd  MongoDB Trial\\frontend\\src\\components\\ShowAndBook.js":"18","C:\\Users\\om javheri\\Desktop\\Sciqus Pvt Ltd  MongoDB Trial\\frontend\\src\\components\\Textform.js":"19","C:\\Users\\om javheri\\Desktop\\Sciqus Pvt Ltd  MongoDB Trial\\frontend\\src\\components\\Create.js":"20","C:\\Users\\om javheri\\Desktop\\Sciqus Pvt Ltd  MongoDB Trial\\frontend\\src\\components\\NavbarLimit.js":"21","C:\\Users\\om javheri\\Desktop\\Sciqus Pvt Ltd  MongoDB Trial\\frontend\\src\\components\\ShowAndBooks.js":"22","C:\\Users\\om javheri\\Desktop\\Sciqus Pvt Ltd  MongoDB Trial\\frontend\\src\\components\\Edit2.js":"23","C:\\Users\\om javheri\\Desktop\\Sciqus Pvt Ltd  MongoDB Trial\\frontend\\src\\components\\Navbar.js":"24","C:\\Users\\om javheri\\Desktop\\Sciqus Pvt Ltd  MongoDB Trial\\frontend\\src\\components\\SignupValidation.js":"25"},{"size":535,"mtime":1689687301440,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":1689687301782,"results":"28","hashOfConfig":"27"},{"size":1909,"mtime":1709401058678,"results":"29","hashOfConfig":"27"},{"size":7557,"mtime":1709400685199,"results":"30","hashOfConfig":"27"},{"size":7756,"mtime":1709400021240,"results":"31","hashOfConfig":"27"},{"size":1814,"mtime":1709399654579,"results":"32","hashOfConfig":"27"},{"size":7430,"mtime":1709400917829,"results":"33","hashOfConfig":"27"},{"size":8140,"mtime":1709400884365,"results":"34","hashOfConfig":"27"},{"size":840,"mtime":1706194137551,"results":"35","hashOfConfig":"27"},{"size":693,"mtime":1706198650615,"results":"36","hashOfConfig":"27"},{"size":511,"mtime":1706281768579,"results":"37","hashOfConfig":"27"},{"size":2067,"mtime":1709399582722,"results":"38","hashOfConfig":"27"},{"size":9772,"mtime":1709400757909,"results":"39","hashOfConfig":"27"},{"size":535,"mtime":1689687301440,"results":"40","hashOfConfig":"41"},{"size":362,"mtime":1689687301782,"results":"42","hashOfConfig":"41"},{"size":1909,"mtime":1709468358925,"results":"43","hashOfConfig":"41"},{"size":511,"mtime":1706281768579,"results":"44","hashOfConfig":"41"},{"size":7783,"mtime":1709469350239,"results":"45","hashOfConfig":"41"},{"size":7952,"mtime":1709466690882,"results":"46","hashOfConfig":"41"},{"size":7430,"mtime":1709400917829,"results":"47","hashOfConfig":"41"},{"size":2067,"mtime":1709399582722,"results":"48","hashOfConfig":"41"},{"size":9779,"mtime":1709466553394,"results":"49","hashOfConfig":"41"},{"size":8140,"mtime":1709400884365,"results":"50","hashOfConfig":"41"},{"size":1814,"mtime":1709399654579,"results":"51","hashOfConfig":"41"},{"size":840,"mtime":1706194137551,"results":"52","hashOfConfig":"41"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"5n9kan",{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9znj9i",{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"104"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\om javheri\\Desktop\\Sciqus Pvt Ltd\\frontend\\src\\index.js",[],[],["133"],"C:\\Users\\om javheri\\Desktop\\Sciqus Pvt Ltd\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\om javheri\\Desktop\\Sciqus Pvt Ltd\\frontend\\src\\App.js",[],[],"C:\\Users\\om javheri\\Desktop\\Sciqus Pvt Ltd\\frontend\\src\\components\\ShowAndBook.js",["134","135","136"],[],"C:\\Users\\om javheri\\Desktop\\Sciqus Pvt Ltd\\frontend\\src\\components\\Textform.js",["137","138"],[],"C:\\Users\\om javheri\\Desktop\\Sciqus Pvt Ltd\\frontend\\src\\components\\Navbar.js",[],[],"C:\\Users\\om javheri\\Desktop\\Sciqus Pvt Ltd\\frontend\\src\\components\\Create.js",[],[],"C:\\Users\\om javheri\\Desktop\\Sciqus Pvt Ltd\\frontend\\src\\components\\Edit2.js",[],[],"C:\\Users\\om javheri\\Desktop\\Sciqus Pvt Ltd\\frontend\\src\\components\\SignupValidation.js",[],[],"C:\\Users\\om javheri\\Desktop\\Sciqus Pvt Ltd\\frontend\\src\\components\\LoginValidation.js",[],[],"C:\\Users\\om javheri\\Desktop\\Sciqus Pvt Ltd\\frontend\\src\\components\\ShowNavbar.js",[],[],"C:\\Users\\om javheri\\Desktop\\Sciqus Pvt Ltd\\frontend\\src\\components\\NavbarLimit.js",[],[],"C:\\Users\\om javheri\\Desktop\\Sciqus Pvt Ltd\\frontend\\src\\components\\ShowAndBooks.js",["139","140"],[],"import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Nouislider from \"nouislider-react\";\r\nimport \"nouislider/distribute/nouislider.css\";\r\nfunction ShowAndBooks() {\r\n  const [concertData, setConcertData] = useState([]);\r\n\r\n  const [originalData, setOriginalData] = useState([]);\r\n  const  [review,setReview]=useState(false)\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [itemsPerPage] = useState(5);\r\n  const [star,setStar]=useState()\r\nconst [collapse,setCollapse]=useState(true)\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:8081/ShowAndBookId');\r\n        const data = await response.json();\r\n        if (Array.isArray(data)) {\r\n          setConcertData(data);\r\n          setOriginalData(data)\r\n        } else {\r\n          setConcertData([]);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n        setConcertData([]);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [review]);\r\n  const [concertData2, setConcertData2] = useState([]);\r\n  const [searchedId, setSearchedId] = useState('');\r\n  const indexOfLastItem = currentPage * itemsPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n  const currentItems = concertData.slice(indexOfFirstItem, indexOfLastItem);\r\n  const currentItems2 = concertData2.slice(indexOfFirstItem, indexOfLastItem);\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  const navigate = useNavigate();\r\n\r\n    const ReviewSubmit = (e) => {\r\n\r\n      e.preventDefault();\r\n\r\n      fetch(\"http://localhost:8081/Review\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          review: comment,\r\n          rating:star ,\r\n          book_id:searchedId,\r\n      \r\n        }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          if (data.message) {\r\n            setReview(false)\r\n            navigate('/ShowAndBooks');\r\n          } else {\r\n            console.log(data);\r\n            setReview(false)\r\n\r\n            navigate('/ShowAndBooks');\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error:\", error);\r\n        });\r\n    };\r\n  \r\n  \r\n    \r\n\r\n    const singleSearch = () => {\r\n      // Filter the data based on the entered ID\r\n      const filteredData = concertData.filter((student) => student.id === parseInt(searchedId));\r\n      \r\n      setConcertData2(filteredData);\r\n      setCollapse(false)\r\n    };\r\n\r\n\r\n  \r\nconst  [comment,setComment]=useState()\r\nconst [minValue, setMinValue] = useState('30');\r\n \r\n    const displayMin = (event) => {\r\n        setMinValue(event[0]);\r\n    }\r\n    const Slider = () => (\r\n        <Nouislider\r\n            range={{ min: 0, max: 100 }} start={[30, 80]}\r\n            connect onChange={displayMin} />\r\n    );\r\n    useEffect(() => {\r\n      setConcertData(originalData.filter((student) => student.price >= minValue));\r\n    }, [minValue]);\r\n\r\n    const handleRadioClick = (status) => {\r\n      if (status === \"A\") {\r\n        setConcertData([...originalData].sort((a, b) => a.price - b.price));\r\n      } else if (status === \"D\") {\r\n        setConcertData([...originalData].sort((a, b) => b.price - a.price));\r\n      }\r\n    };\r\n  return (\r\n    <>\r\n    <div className=' text-center'>\r\n\r\n\r\n<div>\r\n  \r\n</div>\r\n\r\n<h5 className='colorw'>All Books List</h5>\r\n<div className='text-center table-box center2 display'>\r\n<div className='left'>\r\n          <table className=\"table2\">\r\n            <thead >\r\n              <tr >\r\n                <th >Book ID</th>\r\n                <th>\r\n  Author ID\r\n  <input \r\n    type='number' \r\n    placeholder='Find by author ID' \r\n    onChange={(e) => {\r\n      const searchValue = e.target.value;\r\n      if (searchValue !== '') {\r\n        setConcertData(originalData.filter((student) => student.author_id == searchValue));\r\n      } else {\r\n        setConcertData(originalData);\r\n      }\r\n    }}\r\n  />\r\n</th>\r\n\r\n\r\n                <th>Cover</th>\r\n                <th>Title\r\n                \r\n                <input \r\n    type='text' \r\n    placeholder='Find by title' \r\n    onChange={(e) => {\r\n      if(e.target.value){\r\n      setConcertData(concertData.filter((student) => student.title.toLowerCase().includes(e.target.value.toLowerCase())));}\r\n      else{\r\n        setConcertData(originalData)\r\n      }\r\n    }\r\n}\r\n  />\r\n\r\n                </th>\r\n\r\n                \r\n                <th>Description</th>\r\n                <th>Genre\r\n                <input \r\n    type='text' \r\n    placeholder='Find by genre' \r\n    onChange={(e) => {\r\n      if(e.target.value){\r\n      setConcertData(concertData.filter((student) => student.genre.toLowerCase().includes(e.target.value.toLowerCase())));}\r\n      else{\r\n        setConcertData(originalData)\r\n      }\r\n    }\r\n}\r\n  />\r\n\r\n                </th>\r\n                <th>Price\r\n{Slider()}\r\n            <center>\r\n                <div style={{ display: 'inline', padding: '2%' }}>\r\n                    <h3>Min Value</h3>\r\n                    <br></br>\r\n                    <div style={{\r\n                        display: 'inline',\r\n                        padding: '1%'\r\n                    }}>\r\n                      \r\n                        {minValue}\r\n\r\n                    </div>\r\n                </div>\r\n            </center>\r\n            <th>\r\n  \r\n \r\n  <input \r\n    type='radio' \r\n    name='status'\r\n    onClick={() => handleRadioClick(\"A\")}\r\n\r\n  />\r\n  Ascending\r\n\r\n  <input \r\n    type='radio' \r\n    name='status'\r\n    onClick={() => handleRadioClick(\"D\")}\r\n\r\n  />\r\n  Descending\r\n</th>\r\n\r\n\r\n                </th>\r\n                <th>Rating</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className='tbody'>\r\n              {currentItems.map((student, index) => (\r\n                <tr key={index}>\r\n                  <td>{student.book_id}</td>\r\n                 <td>{student.author_id}</td>\r\n                  <td>{student.cover}</td>\r\n                  <td>{student.title}</td>\r\n                  <td>{student.description}</td>\r\n                  <td>{student.genre}</td>\r\n                  <td>{student.price}</td>\r\n                  <td>{student.rating}</td>\r\n                  \r\n\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <div className=\"pagination\">\r\n          {Array.from({ length: Math.ceil(concertData.length / itemsPerPage) }, (_, i) => i + 1).map((page) => (\r\n            <button  key={page} onClick={() => paginate(page)} className={`btn ${currentPage === page ? 'btn-success' : 'btn-warning'}`}>\r\n              {page}\r\n            </button>\r\n          ))}\r\n        </div>\r\n\r\n\r\n \r\n\r\n\r\n        <div>\r\n          <input type=\"number\" className='border'  onChange={(e) => setSearchedId(e.target.value)} placeholder=\"Enter Student ID\" />\r\n          <button type=\"button\" className='button border' onClick={singleSearch}>Search</button>\r\n        </div>\r\n</div>\r\n\r\n\r\n    </div>\r\n    {collapse?<></>:\r\n\r\n    <div className='text-center center2'>\r\n          <table className=\"table2\">\r\n            <thead>\r\n              <tr>\r\n              <th >Book ID</th>\r\n                <th>Author ID</th>\r\n                <th>Cover</th>\r\n                <th>Title</th>\r\n                <th>Description</th>\r\n                <th>Genre</th>\r\n                <th>Publish Date</th>\r\n                <th>Price</th>\r\n                <th>#Tags</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className='tbody'>\r\n              {currentItems2.map((student, index) => (\r\n                <tr key={index}>\r\n                  <td>{student.id}</td>\r\n                  <td>{student.author_id}</td>\r\n                  <td>{student.cover}</td>\r\n                  <td>{student.title}</td>\r\n                  <td>{student.description}</td>\r\n                  <td>{student.genre}</td>\r\n                  <td>{student.publishDate}</td>\r\n                  <td>{student.price}</td>\r\n                  <td>{student.tags}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n          <div >\r\n            <button onClick={()=>{setReview(true)}}>\r\n              Enter Your Review\r\n            </button>\r\n            {review?<div><input type='text' onChange={(e)=>{ setComment(e.target.value)}} placeholder='Enter your review here'/>\r\n            <div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n              <h6 className='colorw center2' >Rating</h6>\r\n              <div class=\"btn-group\" role=\"group\" aria-label=\"Basic radio toggle button group\">\r\n  <input type=\"radio\" class=\"btn-check\" name=\"btnradio\" id=\"btnradio1\" autocomplete=\"off\" onClick={()=>{setStar(1)}} />\r\n  <label class=\"btn btn-outline-primary\" for=\"btnradio1\">1</label>\r\n\r\n  <input type=\"radio\" class=\"btn-check\" name=\"btnradio\" id=\"btnradio2\" autocomplete=\"off\" onClick={()=>{setStar(2)}}/>\r\n  <label class=\"btn btn-outline-primary\" for=\"btnradio2\">2</label>\r\n\r\n  <input type=\"radio\" class=\"btn-check\" name=\"btnradio\" id=\"btnradio3\" autocomplete=\"off\" onClick={()=>{setStar(3)}}/>\r\n  <label class=\"btn btn-outline-primary\" for=\"btnradio3\">3</label>\r\n  <input type=\"radio\" class=\"btn-check\" name=\"btnradio\" id=\"btnradio4\" autocomplete=\"off\" onClick={()=>{setStar(4)}}/>\r\n  <label class=\"btn btn-outline-primary\" for=\"btnradio4\">4</label>\r\n  <input type=\"radio\" class=\"btn-check\" name=\"btnradio\" id=\"btnradio5\" autocomplete=\"off\" onClick={()=>{setStar(5)}}/>\r\n  <label class=\"btn btn-outline-primary\" for=\"btnradio5\">5</label>\r\n  <button onClick={ReviewSubmit}>Submit</button>\r\n</div>\r\n\r\n</div>\r\n\r\n\r\n</div>:<></>}\r\n\r\n          </div>\r\n\r\n        </div>\r\n}\r\n    </>\r\n  )\r\n}\r\nexport default ShowAndBooks;\r\n\r\n",["141"],"C:\\Users\\om javheri\\Desktop\\Sciqus Pvt Ltd  MongoDB Trial\\frontend\\src\\index.js",[],[],"C:\\Users\\om javheri\\Desktop\\Sciqus Pvt Ltd  MongoDB Trial\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\om javheri\\Desktop\\Sciqus Pvt Ltd  MongoDB Trial\\frontend\\src\\App.js",[],[],["142"],"C:\\Users\\om javheri\\Desktop\\Sciqus Pvt Ltd  MongoDB Trial\\frontend\\src\\components\\ShowNavbar.js",[],[],"C:\\Users\\om javheri\\Desktop\\Sciqus Pvt Ltd  MongoDB Trial\\frontend\\src\\components\\ShowAndBook.js",["143","144"],[],"C:\\Users\\om javheri\\Desktop\\Sciqus Pvt Ltd  MongoDB Trial\\frontend\\src\\components\\Textform.js",["145","146"],[],"import React, { useState } from 'react';\r\nimport './log.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport validation from './SignupValidation';\r\n\r\nconst Login=({setloginStatus,setLoginID,setAccountType  })=> {\r\n\r\n\r\n  const isActive = false;\r\n\r\n\r\n  const [isLogIn, setIsLogIn] = useState(true);\r\n\r\n\r\n  const handleChangeClick = () => {\r\n    setIsLogIn((prevIsLogIn) => !prevIsLogIn);\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const navigate = useNavigate();\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const handleSubmitAuthor = (e) => {\r\n    e.preventDefault();\r\n    const err=validation(values);\r\n    setErrors(err)\r\nif(err.name===\"\" && err.email===\"\" && err.password===\"\"){\r\n    fetch(\"http://localhost:8081/SignupAuthor\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        name: values.name,\r\n        email: values.email,\r\n        password: values.password,\r\n      \r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.message) {\r\n          console.log(data.message)\r\n\r\n        } else {\r\n          console.log(data)\r\n          navigate(handleChangeClick())\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error:\", error);\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleSubmitReader = (e) => {\r\n    e.preventDefault();\r\n    const err=validation(values);\r\n    setErrors(err)\r\nif(err.name===\"\" && err.email===\"\" && err.password===\"\"){\r\n    fetch(\"http://localhost:8081/SignupReader\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        name: values.name,\r\n        email: values.email,\r\n        password: values.password,\r\n      \r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.message) {\r\n          console.log(data.message)\r\n        } else {\r\n          console.log(data)\r\n          navigate(handleChangeClick())\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error:\", error);\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleInput = (event) => {\r\n    setValues((prev) => ({ ...prev, [event.target.name]: event.target.value }));\r\n  };\r\n//for login\r\n\r\n\r\n\r\n  const handleSubmitL = (e) => {\r\n    e.preventDefault();\r\n    const err=validation(values);\r\n    setErrors(err)\r\n    if( err.email===\"\" && err.password===\"\"){\r\n\r\n    fetch(\"http://localhost:8081/Login\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        email: values.email,\r\n        password: values.password,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.message) {\r\n          setLoginID(data._doc._id)\r\n\r\n          console.log(data.message)\r\n        }else{\r\n          const isAuthor =data._doc.accountType;\r\n          setLoginID(data._doc._id)\r\n          console.log(data._doc.accountType)\r\n          console.log(data._doc._id)\r\n\r\n\r\n\r\n\r\n          // Example: if user is Author, redirect to Author page\r\n          if (isAuthor===\"Author\") {\r\n              // setIsLog(\"true\");\r\n              setloginStatus(true)\r\n              setAccountType(true)\r\n              \r\n              console.log(isAuthor)\r\n              console.log(data._doc_id)\r\n\r\n              navigate('/ShowAndBook');\r\n          } else {\r\n              // If not admin, redirect to regular reader page\r\n             \r\n              setloginStatus(false)\r\n              setAccountType(false)\r\n              console.log(data)\r\n\r\n\r\n              navigate('/ShowAndBooks');\r\n          }\r\n        \r\n          \r\n          \r\n          \r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error:\", error);\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleInputL = (event) => {\r\n    setValues((prev) => ({ ...prev, [event.target.name]: event.target.value }));\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    \r\n    \r\n<div className='parent body'>\r\n\r\n\r\n<div  className={`container1 ${isLogIn ? 'log-in' : ''} ${isActive ? 'active' : ''}  child`}>\r\n\r\n  <div className=\"box \"></div>\r\n  <div  className=\"container1-forms\">\r\n    <div className=\"container1-info\">\r\n      <div className=\"info-item\">\r\n        <div className=\"table\">\r\n          <div className=\"table-cell\">\r\n            <p>\r\n              Have an account?\r\n            </p>\r\n            <div className=\"btn \" type=\"submit\" onClick={handleChangeClick}>\r\n              Log in\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"info-item\">\r\n        <div className=\"table\">\r\n          <div className=\"table-cell\">\r\n            <p>\r\n              Don't have an account? \r\n            </p>\r\n            <div className=\"btn\" onClick={handleChangeClick}>\r\n              Sign up\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div className=\"container1-form \">\r\n      <div className=\"form-item log-in\">\r\n        <div className=\"table\">\r\n          <div className=\"table-cell\">\r\n          <form className=\"mb-3\">\r\n            <div>\r\n              {/* <label htmlFor='email'><strong>Email</strong></label> */}\r\n              <input type='email' onChange={handleInputL} className='form-control rounded-0' id=\"email\" name=\"email\" placeholder='Enter Email' />\r\n              {errors.email && <span className='text-danger'>{errors.email}</span>}\r\n            </div>\r\n            <div>\r\n              {/* <label htmlFor='password'><strong>Password</strong></label> */}\r\n              <input type='password' onChange={handleInputL} className='form-control rounded-0' id=\"password\" name=\"password\" placeholder='Enter Password' />\r\n              {errors.password && <span className='text-danger'>{errors.password===\"Password Invalid\"?errors.password+\" or username invalid\":errors.password}</span>}\r\n            </div>\r\n            <button type=\"submit\" onClick={handleSubmitL} className='btn btn-success ' >Log in</button>\r\n            <a  href='#' className='FP'>Forget Password</a>\r\n            \r\n            \r\n          </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"form-item sign-up color\">\r\n        <div className=\"table\">\r\n          <div className=\"table-cell \">\r\n          <form className=\"mb-5 \">\r\n            <div>\r\n            <div>\r\n              {/* <label htmlFor='text'><strong>Name</strong></label> */}\r\n              <input type='text' onChange={handleInput} className='form-control rounded-0 ' id=\"name\" name=\"name\" placeholder='Enter Name' />\r\n              {errors.name && <span className='text-danger'>{errors.name}</span>}\r\n            </div>\r\n            <div>\r\n              {/* <label htmlFor='email'><strong>Email</strong></label> */}\r\n              <input type='email' onChange={handleInput} className='form-control rounded-0' id=\"email\" name=\"email\" placeholder='Enter Email' />\r\n              {errors.email && <span className='text-danger'>{errors.email}</span>}\r\n            </div>\r\n            <div>\r\n              {/* <label htmlFor='password'><strong>Password</strong></label> */}\r\n              <input type='password' onChange={handleInput} className='form-control rounded-0' id=\"password\" name=\"password\" placeholder='Enter Password' />\r\n              {errors.password && <span className='text-danger'>{errors.password}</span>}\r\n            </div>\r\n            <button type=\"button\" class=\"btn btn-success\" onClick={handleSubmitAuthor}>Signup as Author</button>\r\n\r\n\r\n\r\n            <button type=\"submit\" onClick={handleSubmitReader} className='btn btn-success' >Signup as Reader</button>\r\n            <a>You agree to terms and conditions*</a>\r\n            </div>\r\n          </form>\r\n             \r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n</div>\r\n\r\n  \r\n  );\r\n}\r\n\r\n\r\nexport default Login;","C:\\Users\\om javheri\\Desktop\\Sciqus Pvt Ltd  MongoDB Trial\\frontend\\src\\components\\Create.js",[],[],"C:\\Users\\om javheri\\Desktop\\Sciqus Pvt Ltd  MongoDB Trial\\frontend\\src\\components\\NavbarLimit.js",[],[],"C:\\Users\\om javheri\\Desktop\\Sciqus Pvt Ltd  MongoDB Trial\\frontend\\src\\components\\ShowAndBooks.js",["147","148"],[],"C:\\Users\\om javheri\\Desktop\\Sciqus Pvt Ltd  MongoDB Trial\\frontend\\src\\components\\Edit2.js",[],[],"C:\\Users\\om javheri\\Desktop\\Sciqus Pvt Ltd  MongoDB Trial\\frontend\\src\\components\\Navbar.js",[],[],"C:\\Users\\om javheri\\Desktop\\Sciqus Pvt Ltd  MongoDB Trial\\frontend\\src\\components\\SignupValidation.js",[],[],{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":17,"column":65,"nodeType":"153","messageId":"154","endLine":17,"endColumn":67},{"ruleId":"151","severity":1,"message":"152","line":22,"column":65,"nodeType":"153","messageId":"154","endLine":22,"endColumn":67},{"ruleId":"155","severity":1,"message":"156","line":34,"column":3,"nodeType":"157","endLine":34,"endColumn":5,"suggestions":"158"},{"ruleId":"159","severity":1,"message":"160","line":219,"column":13,"nodeType":"161","endLine":219,"endColumn":41},{"ruleId":"159","severity":1,"message":"162","line":251,"column":13,"nodeType":"161","endLine":251,"endColumn":16},{"ruleId":"155","severity":1,"message":"163","line":101,"column":8,"nodeType":"157","endLine":101,"endColumn":18,"suggestions":"164"},{"ruleId":"151","severity":1,"message":"152","line":134,"column":75,"nodeType":"153","messageId":"154","endLine":134,"endColumn":77},{"ruleId":"149","replacedBy":"165"},{"ruleId":"149","replacedBy":"166"},{"ruleId":"151","severity":1,"message":"152","line":27,"column":29,"nodeType":"153","messageId":"154","endLine":27,"endColumn":31},{"ruleId":"155","severity":1,"message":"167","line":46,"column":4,"nodeType":"157","endLine":46,"endColumn":6,"suggestions":"168"},{"ruleId":"159","severity":1,"message":"160","line":227,"column":13,"nodeType":"161","endLine":227,"endColumn":41},{"ruleId":"159","severity":1,"message":"162","line":259,"column":13,"nodeType":"161","endLine":259,"endColumn":16},{"ruleId":"155","severity":1,"message":"163","line":101,"column":8,"nodeType":"157","endLine":101,"endColumn":18,"suggestions":"169"},{"ruleId":"151","severity":1,"message":"152","line":135,"column":75,"nodeType":"153","messageId":"154","endLine":135,"endColumn":77},"no-new-object",["170"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loginID.loginID'. Either include it or remove the dependency array.","ArrayExpression",["171"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","React Hook useEffect has a missing dependency: 'originalData'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setConcertData' needs the current value of 'originalData'.",["172"],["170"],["170"],"React Hook useEffect has a missing dependency: 'fetchData2'. Either include it or remove the dependency array.",["173"],["174"],"no-object-constructor",{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},{"desc":"177","fix":"181"},"Update the dependencies array to be: [loginID.loginID]",{"range":"182","text":"183"},"Update the dependencies array to be: [minValue, originalData]",{"range":"184","text":"185"},"Update the dependencies array to be: [fetchData2]",{"range":"186","text":"187"},{"range":"188","text":"185"},[996,998],"[loginID.loginID]",[3042,3052],"[minValue, originalData]",[1384,1386],"[fetchData2]",[3046,3056]]